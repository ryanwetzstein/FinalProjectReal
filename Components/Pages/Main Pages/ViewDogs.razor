@page "/viewdogs"
@using Microsoft.EntityFrameworkCore
@using FinalProject.Models
@using FinalProject.Data
@implements IAsyncDisposable
@inject IDbContextFactory<FinalProject.Data.FinalProjectContext> DbFactory

<PageTitle>View Dogs</PageTitle>

<!-- Link to Google Fonts for a different font -->
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

<!-- Welcome Header Section -->
<div class="welcome-container text-center mt-5">
    <h1 style="font-family: 'Roboto', sans-serif; font-weight: 700;">Adoptable Dogs</h1>
</div>

<!-- Container for Grid with 3 Dogs -->
<div class="container mt-4">
    <div class="row">
        @foreach (var dog in Listings)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <!-- Correct Image Style Here -->
                    <img src="@dog.ImageUrl" class="card-img-top" alt="@dog.Name" style="width: 250px; height: 250px; object-fit: cover;">
                    <div class="card-body text-center">
                        <h5 class="card-title">@dog.Name</h5>
                        <!-- Dynamically set the href to go to the dog's profile page using the Id -->
                        <a href="/profile/@dog.Id" class="btn btn-primary">View Profile</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private FinalProjectContext context = default!;
    private List<Listing> Listings { get; set; } = new List<Listing>();

    protected override async Task OnInitializedAsync()
    {
        // Fetch all dogs from the database
        Listings = await context.Listing.ToListAsync();
    }

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
