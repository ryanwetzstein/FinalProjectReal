@page "/eventitems/create"
@using Microsoft.EntityFrameworkCore
@using FinalProject.Models
@inject IDbContextFactory<FinalProject.Data.FinalProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Event Item</PageTitle>

<!-- Blue and Black Navbar -->
<div class="top-row ps-3 navbar navbar-dark bg-primary">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Doggy Domain</a>
    </div>
</div>

<!-- Main Container -->
<div class="container mt-5">
    <h1 class="text-center mb-4">Create Event Item</h1>

    <h2 class="text-center">Event Item Details</h2>
    <hr />

    <!-- Form Container -->
    <div class="row justify-content-center">
        <div class="col-md-6">

            <EditForm method="post" Model="EventItem" OnValidSubmit="AddEventItem" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <!-- Title -->
                <div class="mb-3 text-center">
                    <label for="title" class="form-label">Title:</label>
                    <InputText id="title" @bind-Value="EventItem.Title" class="form-control" style="max-width: 80%;" aria-required="true" />
                    <ValidationMessage For="() => EventItem.Title" class="text-danger" />
                </div>

                <!-- Description -->
                <div class="mb-3 text-center">
                    <label for="description" class="form-label">Description:</label>
                    <InputText id="description" @bind-Value="EventItem.Description" class="form-control" style="max-width: 80%;" aria-required="true" />
                    <ValidationMessage For="() => EventItem.Description" class="text-danger" />
                </div>

                <!-- Date -->
                <div class="mb-3 text-center">
                    <label for="date" class="form-label">Date:</label>
                    <InputText id="date" @bind-Value="EventItem.Date" class="form-control" style="max-width: 80%;" aria-required="true" />
                    <ValidationMessage For="() => EventItem.Date" class="text-danger" />
                </div>

                <!-- Time Start -->
                <div class="mb-3 text-center">
                    <label for="timestart" class="form-label">Time Start:</label>
                    <InputText id="timestart" @bind-Value="EventItem.TimeStart" class="form-control" style="max-width: 80%;" aria-required="true" />
                    <ValidationMessage For="() => EventItem.TimeStart" class="text-danger" />
                </div>

                <!-- Time End -->
                <div class="mb-3 text-center">
                    <label for="timeend" class="form-label">Time End:</label>
                    <InputText id="timeend" @bind-Value="EventItem.TimeEnd" class="form-control" style="max-width: 80%;" aria-required="true" />
                    <ValidationMessage For="() => EventItem.TimeEnd" class="text-danger" />
                </div>

                <!-- Submit Button -->
                <button type="submit" class="btn btn-primary w-100">Create</button>
            </EditForm>
        </div>
    </div>

    <!-- Back Link -->
    <div class="text-center mt-4">
        <a href="/eventitems" class="btn btn-secondary btn-sm">Back to List</a>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private EventItem EventItem { get; set; } = new();

    private async Task AddEventItem()
    {
        using var context = DbFactory.CreateDbContext();
        context.EventItem.Add(EventItem);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/eventitems");
    }
}
